import net.minecraftforge.gradle.common.tasks.SignJar

import java.time.Instant

plugins {
  id 'net.minecraftforge.gradle' version '5.1.26'
  id 'net.nemerosa.versioning' version '2.15.1'
  id 'org.gradle.signing'
}

group = 'dev.sapphic'
version = '2.0.2'

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = sourceCompatibility

  withSourcesJar()
}

minecraft {
  mappings channel: 'stable', version: '39-1.12'

  runs {
    client {
      property 'forge.logging.console.level', 'debug'
      property 'forge.logging.markers', 'SCAN'
    }
  }
}

repositories {
  maven {
    url = 'https://cursemaven.com'
    content {
      includeGroup 'curse.maven'
    }
  }
}

dependencies {
  minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
  implementation fg.deobf('curse.maven:baubles-227083:2518667') // 1.12-1.5.2
}

tasks {
  compileJava {
    options.with {
      it.deprecation = true
      it.encoding = 'UTF-8'
      it.fork = true
      it.compilerArgs.addAll(
          ['-Xlint:all',
           '-Xlint:-processing',
           '-parameters' // JEP 118
          ]
      )
    }
  }

  processResources {
    filesMatching('/mcmod.info') {
      expand version: project.version
    }
  }

  jar {
    from 'LICENSE'

    manifest.attributes(
        'Build-Timestamp': Instant.now(),
        'Build-Revision': versioning.info.commit,
        'Build-Jvm': String.format(
            '%s (%s %s)',
            System.getProperty('java.version'),
            System.getProperty('java.vm.vendor'),
            System.getProperty('java.vm.version')
        ),
        'Built-By': GradleVersion.current(),
        'Implementation-Title': project.name,
        'Implementation-Version': project.version,
        'Implementation-Vendor': project.group,
        'Specification-Title': 'ForgeMod',
        'Specification-Version': '1.0.0',
        'Specification-Vendor': 'dev.sapphic'
    )
  }

  if (project.hasProperty('signing.mods.keyalias')) {
    final String keyalias = project.property 'signing.mods.keyalias'
    final String keystore = project.property 'signing.mods.keystore'
    final String password = project.property 'signing.mods.password'

    task signJar(type: SignJar, dependsOn: reobf) {
      alias.set keyalias
      keyStore.set keystore
      keyPass.set password
      storePass.set password
      inputFile.set jar.archiveFile
      outputFile.set inputFile

      doLast {
        signing.sign outputFile.get().asFile
      }
    }

    task signSourcesJar(type: SignJar, dependsOn: sourcesJar) {
      alias.set keyalias
      keyStore.set keystore
      keyPass.set password
      storePass.set password
      inputFile.set sourcesJar.archiveFile
      outputFile.set inputFile

      doLast {
        signing.sign outputFile.get().asFile
      }
    }

    assemble {
      dependsOn signJar, signSourcesJar
    }
  }
}
